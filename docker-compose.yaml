name: rurl

services:
  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.amd64 # Setup Dockerfile.common in case of ARM architecture
    ports:
      - "4444:4444"
    environment:
      - RUST_LOG=info
      - RURL_PORT=4444
      - RURL_HOST=0.0.0.0
      - RURL_REDIS_ENDPOINT=redis:6379
      - RURL_OPENROUTER_TOKEN=${RURL_OPENROUTER_TOKEN}
    depends_on:
      - redis

  frontend:
    image: nginx:alpine
    ports:
      - "5555:80"
    volumes:
      - ./app:/usr/share/nginx/html
      - ./nginx/nginx.conf.template:/etc/nginx/conf.d/default.conf.template
      - ./nginx/start.sh:/docker-entrypoint.d/start.sh
    environment:
      - NGINX_URL=localhost:5555
    command: ["/bin/sh", "/docker-entrypoint.d/start.sh"]

    depends_on:
      - backend

  victoriametrics:
    image: victoriametrics/victoria-metrics:v1.116.0
    ports:
      - 8428:8428
    volumes:
      - ./deployment/configs/scrape_config.yaml:/etc/scrape_config.yaml
    command: ["-promscrape.config=/etc/scrape_config.yaml"]

  grafana:
    image: grafana/grafana:11.6.1
    environment:
      - GF_INSTALL_PLUGINS=victoriametrics-metrics-datasource
    ports: 
      - 3000:3000
    volumes:
      - ./deployment/configs/grafana.ini:/etc/grafana/grafana.ini
      - ./deployment/configs/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ./deployment/configs/grafana_dashboard_provider.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./deployment/configs/grafana_dashboards/:/var/lib/grafana/dashboards
    depends_on:
      - alloy
      - vmalert
      - alertmanager
      - backend
      - victoriametrics
  
  loki:
    image: grafana/loki:3.4.3
    ports:
      - 3100:3100
    volumes:
      - ./loki-config.yaml:/etc/loki/config.yaml

  alloy:
    image: grafana/alloy:v1.8.2
    volumes:
      - ./deployment/configs/alloy-local-config.yaml:/etc/alloy/config.alloy
      - /var/run/docker.sock:/var/run/docker.sock
    command:  [
      "run",
       "--server.http.listen-addr=0.0.0.0:12345",
       "--storage.path=/var/lib/alloy/data",
       "/etc/alloy/config.alloy"
    ]
    ports:
      - 12345:12345
    depends_on:
      - loki
  
  alertmanager:
    image: prom/alertmanager:v0.28.1
    volumes:
      - ./deployment/configs/alertmanager.yaml:/etc/alertmanager/alertmanager.yaml
      - ./bot_token.env:/etc/telegram_bot_token
    ports:
      - 9093:9093
    command: ["--config.file=/etc/alertmanager/alertmanager.yaml"]

  vmalert:
    image: victoriametrics/vmalert:v1.116.0
    volumes:
      - ./deployment/configs/vmalert.yaml:/etc/vmalert/vmalert.yaml
    command:
      [
        "-rule=/etc/vmalert/vmalert.yaml", 
        "-datasource.url=http://victoriametrics:8428",
        "-notifier.url=http://alertmanager:9093"
      ]
    ports:
      - 8880:8880

volumes:
  redis_data:
